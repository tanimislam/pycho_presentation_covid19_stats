{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c93333;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
{\info
{\author Nathaniel Rich}
{\*\company The New York Times}}\margl1440\margr1440\vieww14020\viewh13640\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 PRESENTATION #1: Python for Quick, Useful Multimedia Manipulation: Anecdotes from a Python Programmer\
\
ABSTRACT #1: \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 One of Python's many killer features is that a programmer can organically create snippets of code, and coherently join them into larger collections of module code. In this presentation, I describe and demonstrate relatively simple Python tools -- for image, video, and audio manipulation -- that I use every day at work and outside work.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 automatically cropping out whitespace in images (surprisingly easy to do).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 creating movies from a sequence of generated images.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 conversion of movie clips, either files or YouTube clips, into animated GIFs (useful where the online service does not allow for video animations from movie files, such as {\field{\*\fldinst{HYPERLINK "https://github.com/"}}{\fldrslt \cf3 \ul \ulc3 \strokec3 GitHub}} or {\field{\*\fldinst{HYPERLINK "https://www.readthedocs.io/"}}{\fldrslt \cf3 \ul \ulc3 \strokec3 Read the Docs}}).\
\pard\pardeftab720\sa240\partightenfactor0
\cf2 If there's time or interest, I can even describe and demonstrate how to retrieve and label music you might find, all within Python.\
PRESENTATION #2: COVID19_Stats: Experiences Visualizing and Deploying Data from the NY Times COVID-19 Database\
ABSTRACT #2: Here, I present a regular update work flow, compiling and updating summary COVID-19 cases and deaths, animations and figures, for 26 US regions (metropolitan statistical areas, states, and CONUS). The underlying data comes from the NY Times COVID-19 database repository on GitHub (https://github.com/nytimes/covid-19-data).\
The repos are in Google Colab Jupyter notebooks, here:\
* MSA cases and deaths (https://colab.research.google.com/drive/1yBs35ikyNMvuP2kEx1FDIgTO-Zsselhy?usp=sharing).\
* state and CONUS cases and deaths (https://colab.research.google.com/drive/11Mhwu3Gj3VVQEpLzlZVCclMmn5Nx3YJL?usp=sharing).\
As a bonus, I will demonstrate visualizations of COVID-19 cumulative, and 7-day rolling average, cases and deaths for the Blue Ridge Health District (Charlottesville, Albemarle County, Nelson County, Greene County, Louisa County, and Fluvanna County).\
PRESENTATION #3: Sphinx Deploying Your Project: Why Not?\
ABSTRACT #3: Sphinx (https://www.sphinx-doc.org/en/master/index.html) is a powerful documentation tool to make polished, searchable websites for your API and software. Its learning curve is usually not too steep. In this presentation, I describe what Sphinx can do, structure the documentation directory, and deploy Sphinx documentation to Github pages (you don't have to pay for bandwidth and space!). I demonstrate Sphinx from three of my Github projects with Sphinx documentation, and I invite others to borrow ideas and code for their Sphinx documentation websites from them.\
}